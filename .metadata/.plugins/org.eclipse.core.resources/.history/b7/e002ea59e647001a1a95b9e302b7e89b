package prefixCalculator;

public interface iStack<E> {

   // pre: stack could be empty
   // post: item is added to stack
   // will be popped next if no intervening push
	abstract public void push(E item);

   // pre: stack is not empty
   // post: most recently pushed item is removed and returned
   public E pop();

   // pre: stack is not empty
   // post: top value (next to be popped) is returned
   public E peek();

   // post: returns true if and only if the stack is empty
   public boolean empty();

   // post: returns the number of elements in the stack
   public int size();
	
}
